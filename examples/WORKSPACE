workspace(name = "examples")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

local_repository(
    name = "linting_system",
    path = "../"
)

load("@linting_system//repositories:repositories.bzl", linting_sys_repositories = "repositories")
linting_sys_repositories()

load("@linting_system//repositories:go_repositories.bzl", linting_sys_deps = "go_deps")
linting_sys_deps()

#######################################
# JSONNET
#######################################

rules_jsonnet_version = "0.2.0"

http_archive(
    name = "io_bazel_rules_jsonnet",
    sha256 = "68b5bcb0779599065da1056fc8df60d970cffe8e6832caf13819bb4d6e832459",
    strip_prefix = "rules_jsonnet-{version}".format(version = rules_jsonnet_version),
    urls = ["https://github.com/bazelbuild/rules_jsonnet/archive/{version}.tar.gz".format(version = rules_jsonnet_version)],
)
load("@io_bazel_rules_jsonnet//jsonnet:jsonnet.bzl", "jsonnet_repositories")

jsonnet_repositories()

load("@jsonnet_go//bazel:repositories.bzl", "jsonnet_go_repositories")

jsonnet_go_repositories()

load("@jsonnet_go//bazel:deps.bzl", "jsonnet_go_dependencies")

jsonnet_go_dependencies()

#######################################
# GOLANG
#######################################

rules_go_version = "v0.20.2"

http_archive(
    name = "io_bazel_rules_go",
    urls = [
        "https://storage.googleapis.com/bazel-mirror/github.com/bazelbuild/rules_go/releases/download/{version}/rules_go-{version}.tar.gz".format(version = rules_go_version),
        "https://github.com/bazelbuild/rules_go/releases/download/{version}/rules_go-{version}.tar.gz".format(version = rules_go_version),
    ],
    sha256 = "b9aa86ec08a292b97ec4591cf578e020b35f98e12173bbd4a921f84f583aebd9",
)

load("@io_bazel_rules_go//go:deps.bzl", "go_rules_dependencies", "go_register_toolchains")

go_rules_dependencies()

go_register_toolchains()

#######################################
# RUBY
#######################################

git_repository(
    name = "com_github_yugui_rules_ruby",
    remote = "https://github.com/yugui/rules_ruby.git",
    tag = "v0.1.0",
)

load(
    "@com_github_yugui_rules_ruby//ruby:deps.bzl",
    "ruby_register_toolchains",
    "ruby_rules_dependencies",
)

ruby_rules_dependencies()

# ruby_register_toolchains()

#######################################
# SWIFT
#######################################

http_archive(
    name = "build_bazel_rules_swift",
    sha256 = "12057b7aa904467284eee640de5e33853e51d8e31aae50b3fb25d2823d51c6b8",
    url = "https://github.com/bazelbuild/rules_swift/releases/download/1.0.0/rules_swift.1.0.0.tar.gz",
)

http_archive(
    name = "swiftformat",
    sha256 = "f8ecce65f67cbc4e855d2a508e1282018cd7427f2b6bc33c83a3416c227233b4",
    url = "https://github.com/nicklockwood/SwiftFormat/releases/download/0.49.11/swiftformat_linux.zip",
    patch_cmds = ["chmod u+x swiftformat_linux"],
    build_file_content = "filegroup(name = \"swiftformat\", srcs=[\"swiftformat_linux\"], visibility=[\"//visibility:public\"])",
)


load(
    "@build_bazel_rules_swift//swift:repositories.bzl",
    "swift_rules_dependencies",
)

swift_rules_dependencies()

load(
    "@build_bazel_rules_swift//swift:extras.bzl",
    "swift_rules_extra_dependencies",
)

swift_rules_extra_dependencies()

#######################################
# NIXPKGS
#######################################

rules_nixpkgs_version = "a169f54bfc48ad3ade9f46acac9fae7d493ad94b"

http_archive(
    name = "io_tweag_rules_nixpkgs",
    strip_prefix = "rules_nixpkgs-{version}".format(version = rules_nixpkgs_version),
    urls = [
        "https://github.com/tweag/rules_nixpkgs/archive/{version}.tar.gz".format(version = rules_nixpkgs_version),
    ],
)

load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_git_repository", "nixpkgs_package")

nixpkgs_git_repository(
    name = "nixpkgs",
    revision = "94a08f2f8e9773df925639ca52f97f0136ab2cdc",
    sha256 = "a920c5ae08bec3b4296a0744c51e182192f05fecde08ab21addce736163d25d5",
)

nixpkgs_package(
    name = "rubocop",
    build_file_content = """
package(default_visibility = ["//visibility:public"])
filegroup(
    name = "exe",
    srcs = ["bin/rubocop"],
)
""",
    nix_file = "//tools/linting/nix:rubocop.nix",
    repositories = {"nixpkgs": "@nixpkgs//:default.nix"},
)